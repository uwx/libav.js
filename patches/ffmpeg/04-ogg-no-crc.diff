Index: ffmpeg-6.0.1/libavformat/oggdec.c
===================================================================
--- ffmpeg-6.0.1.orig/libavformat/oggdec.c
+++ ffmpeg-6.0.1/libavformat/oggdec.c
@@ -319,10 +319,12 @@ static int ogg_read_page(AVFormatContext
     int flags, nsegs;
     uint64_t gp;
     uint32_t serial;
-    uint32_t crc, crc_tmp;
+    uint32_t crc /*, crc_tmp*/;
     int size = 0, idx;
     int64_t version, page_pos;
+#if 0
     int64_t start_pos;
+#endif
     uint8_t sync[4];
     uint8_t segments[255];
     uint8_t *readout_buf;
@@ -359,12 +361,14 @@ static int ogg_read_page(AVFormatContext
         return AVERROR_INVALIDDATA;
     }
 
+#if 0
     /* 0x4fa9b05f = av_crc(AV_CRC_32_IEEE, 0x0, "OggS", 4) */
     ffio_init_checksum(bc, ff_crc04C11DB7_update, 0x4fa9b05f);
 
     /* To rewind if checksum is bad/check magic on switches - this is the max packet size */
     ffio_ensure_seekback(bc, MAX_PAGE_SIZE);
     start_pos = avio_tell(bc);
+#endif
 
     version = avio_r8(bc);
     flags   = avio_r8(bc);
@@ -372,10 +376,14 @@ static int ogg_read_page(AVFormatContext
     serial  = avio_rl32(bc);
     avio_skip(bc, 4); /* seq */
 
+#if 0
     crc_tmp = ffio_get_checksum(bc);
+#endif
     crc     = avio_rb32(bc);
+#if 0
     crc_tmp = ff_crc04C11DB7_update(crc_tmp, (uint8_t[4]){0}, 4);
     ffio_init_checksum(bc, ff_crc04C11DB7_update, crc_tmp);
+#endif
 
     nsegs    = avio_r8(bc);
     page_pos = avio_tell(bc) - 27;
@@ -407,6 +415,7 @@ static int ogg_read_page(AVFormatContext
         return ret < 0 ? ret : AVERROR_EOF;
     }
 
+#if 0
     if (crc ^ ffio_get_checksum(bc)) {
         av_log(s, AV_LOG_ERROR, "CRC mismatch!\n");
         if (idx < 0)
@@ -426,6 +435,7 @@ static int ogg_read_page(AVFormatContext
         *sid = -1;
         return 0;
     }
+#endif
 
     /* CRC is correct so we can be 99% sure there's an actual change here */
     if (idx < 0) {
