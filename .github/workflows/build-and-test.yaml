name: build-and-test
run-name: Build and test ${{ github.sha }}
on: [push, workflow_dispatch]

env:
  EM_VERSION: 3.1.55
  EM_CACHE_FOLDER: 'cache-emsdk'

jobs:
  build:
    # This should be ubuntu-latest, but as of 2023-10-06ish, it has problems
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - uses: mymindstorm/setup-emsdk@v12
        with:
          version: ${{env.EM_VERSION}}
          actions-cache-folder: ${{env.EM_CACHE_FOLDER}}
          no-cache: true

      - uses: actions/cache@v3
        name: Cache system libraries
        with:
          path: ${{env.EM_CACHE_FOLDER}}
          key: ${{env.EM_VERSION}}-${{ runner.os }}-${{github.job}}

      - uses: actions/cache@v3
        name: Cache dependencies
        with:
          key: cache-dependencies-${{ hashFiles('mk/*') }}
          path: build/*.tar*

      - name: 'Run m4 on all *.m4 files'
        run: |
          for i in $(find -name "*.m4"); do
            m4 $i > "$(dirname $i)/$(basename $i .m4)"
          done

      - name: Generate configs
        run: |
          cd configs
          node mkconfigs
          cd ..

      - run: make extract

      - uses: bhowell2/github-substring-action@1.0.2
        id: sha
        with:
          value: ${{ github.sha }}
          length_from_start: 7

      - run: make release -j9 LIBAVJS_VERSION_SUFFIX=-${{ steps.sha.outputs.substring }}

      - uses: actions/upload-artifact@v3
        with:
          name: build
          path: dist/release/libav.js-*.zip

      - run: |
          FFMPEG_VERSION_MAJOR="6"
          FFMPEG_VERSION_MINREV="1.1"
          FFMPEG_VERSION="$FFMPEG_VERSION_MAJOR.$FFMPEG_VERSION_MINREV"

          LIBAVJS_VERSION_BASE="5.1"
          LIBAVJS_VERSION_SUFFIX="-${{ steps.sha.outputs.substring }}"
          LIBAVJS_VERSION="$LIBAVJS_VERSION_BASE.$FFMPEG_VERSION$LIBAVJS_VERSION_SUFFIX"

          cd dist/release && unzip libav.js-$LIBAVJS_VERSION.zip
          cd libav.js-$LIBAVJS_VERSION && \
            cp ../../../package.json . && \
            rm -f dist/*.dbg.* dist/*.asm.mjs && \
            npm publish --access=public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      #- run: make
      #- run: make build-all
      #- run: npm test

  build-variant:
    strategy:
      fail-fast: false
      matrix:
        variant: [
          default, default-cli, opus, opus-af, flac, flac-af, wav, wav-af, obsolete, webm, webm-cli, webm-vp9, webm-vp9-cli, vp8-opus, vp8-opus-avf, vp9-opus, vp9-opus-avf, av1-opus, av1-opus-avf, webcodecs, webcodecs-avf, all
        ]

    if: "!contains(github.event.head_commit.message, 'skip ci')"

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install LLVM and Clang
        uses: uwx/install-llvm-action@master
        with:
          version: "18.1.4"

      - uses: actions/cache@v3
        name: Cache system libraries
        with:
          path: ${{env.EM_CACHE_FOLDER}}
          key: ${{env.EM_VERSION}}-${{ runner.os }}-${{github.job}}-${{matrix.variant}}

      - uses: mymindstorm/setup-emsdk@v12
        with:
          version: ${{env.EM_VERSION}}
          #actions-cache-folder: ${{env.EM_CACHE_FOLDER}}
          no-cache: true

      - uses: actions/cache@v3
        name: Cache dependencies
        with:
          key: cache-dependencies-${{ hashFiles('mk/*') }}-${{ runner.os }}-${{github.job}}
          path: build/*.tar*

      - name: Generate configs
        run: |
          cd configs
          node mkconfigs
          cd ..

      - run: make extract

      - uses: bhowell2/github-substring-action@1.0.2
        id: sha
        with:
          value: ${{ github.sha }}
          length_from_start: 7

      - run: |-
          LIBAVJS_VERSION_SUFFIX=-${{ steps.sha.outputs.substring }}
          LIBAVJS_VERSION="4.3.6.0$LIBAVJS_VERSION_SUFFIX"
          mkdir libav.js-$LIBAVJS_VERSION
          cp -a README.md docs libav.js-$LIBAVJS_VERSION/
          mkdir libav.js-$LIBAVJS_VERSION/dist
          for v in ${{matrix.variant}};
          do
            make build-$v LIBAVJS_VERSION_SUFFIX=-${{ steps.sha.outputs.substring }}
            cp dist/libav-$LIBAVJS_VERSION-$v.* libav.js-$LIBAVJS_VERSION/dist
          done
          cp dist/libav.types.d.ts libav.js-$LIBAVJS_VERSION/dist/
          mkdir libav.js-$LIBAVJS_VERSION/sources
          for t in ffmpeg lame libaom libogg libvorbis libvpx opus;
          do
            make $t-release LIBAVJS_VERSION_SUFFIX=-${{ steps.sha.outputs.substring }}
          done
          git archive HEAD -o libav.js-$LIBAVJS_VERSION/sources/libav.js.tar
          xz libav.js-$LIBAVJS_VERSION/sources/libav.js.tar
          #zip -r libav.js-$LIBAVJS_VERSION.zip libav.js-$LIBAVJS_VERSION
          #rm -rf libav.js-$LIBAVJS_VERSION

      - uses: actions/upload-artifact@v3
        with:
          name: libav.js ${{matrix.variant}}
          path: libav.js-*

      #- run: |
      #    FFMPEG_VERSION_MAJOR="6"
      #    FFMPEG_VERSION_MINREV="1.1"
      #    FFMPEG_VERSION="$FFMPEG_VERSION_MAJOR.$FFMPEG_VERSION_MINREV"

      #    LIBAVJS_VERSION_BASE="5.1"
      #    LIBAVJS_VERSION_SUFFIX="-${{ steps.sha.outputs.substring }}"
      #    LIBAVJS_VERSION="$LIBAVJS_VERSION_BASE.$FFMPEG_VERSION$LIBAVJS_VERSION_SUFFIX"

      #    cd dist/release && unzip libav.js-$LIBAVJS_VERSION.zip
      #    cd libav.js-$LIBAVJS_VERSION && \
      #      cp ../../../package.json . && \
      #      rm -f dist/*.dbg.* dist/*.asm.mjs && \
      #      npm publish --access=public
      #  env:
      #    NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
