name: build-and-test
run-name: Build and test ${{ github.sha }}
on: [push, workflow_dispatch]

env:
  EM_VERSION: 3.1.55
  EM_CACHE_FOLDER: 'cache-emsdk'

jobs:
  build:
    # This should be ubuntu-latest, but as of 2023-10-06ish, it has problems
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - uses: mymindstorm/setup-emsdk@v12
        with:
          version: ${{env.EM_VERSION}}
          actions-cache-folder: ${{env.EM_CACHE_FOLDER}}
          no-cache: true

      - uses: actions/cache@v3
        name: Cache system libraries
        with:
          path: ${{env.EM_CACHE_FOLDER}}
          key: ${{env.EM_VERSION}}-${{ runner.os }}-${{github.job}}

      - uses: actions/cache@v3
        name: Cache dependencies
        with:
          key: cache-dependencies-${{ hashFiles('mk/*') }}
          path: build/*.tar*

      - name: Generate configs
        run: |
          cd configs
          node mkconfigs
          cd ..

      - run: make extract

      - uses: bhowell2/github-substring-action@1.0.2
        id: sha
        with:
          value: ${{ github.sha }}
          length_from_start: 7

      - run: make release -j9 LIBAVJS_VERSION_SUFFIX=-${{ steps.sha.outputs.substring }}

      - uses: actions/upload-artifact@v3
        with:
          name: build
          path: dist/release/libav.js-*.zip

      - run: |
          FFMPEG_VERSION_MAJOR=6
          FFMPEG_VERSION_MINREV=1.1
          FFMPEG_VERSION=$(FFMPEG_VERSION_MAJOR).$(FFMPEG_VERSION_MINREV)

          LIBAVJS_VERSION_BASE=5.1
          LIBAVJS_VERSION_SUFFIX=-${{ steps.sha.outputs.substring }}
          LIBAVJS_VERSION=$(LIBAVJS_VERSION_BASE).$(FFMPEG_VERSION)$(LIBAVJS_VERSION_SUFFIX)

          cd dist/release && unzip libav.js-$(LIBAVJS_VERSION).zip
          cd dist/release/libav.js-$(LIBAVJS_VERSION) && \
            cp ../../../package.json . && \
            rm -f dist/*.dbg.* dist/*.asm.mjs && \
            npm publish --access=public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  
      #- run: make
      #- run: make build-all
      #- run: npm test
